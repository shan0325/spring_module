buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    // querydsl 추가
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

bootJar {
    enabled = false
}
jar {
    enabled = true
}

dependencies {
    implementation project(':common')

    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    api 'org.springframework.boot:spring-boot-starter-data-jpa'

    // database
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.3.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // querydsl
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

    // modelmapper
    implementation 'org.modelmapper:modelmapper:3.2.0'

    // DB 쿼리 정렬
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'

    // apache commons-lang3
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    // jackson
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.5'
}

//querydsl 추가 시작
def querydslDir = layout.buildDirectory.dir("generated/querydsl").get().asFile

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir // 빌드시 컴파일이 필요한 소스위치
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
//querydsl 추가 끝
